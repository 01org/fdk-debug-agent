################################################################################
#                              INTEL CONFIDENTIAL
#   Copyright(C) 2015-2016 Intel Corporation. All Rights Reserved.
#   The source code contained  or  described herein and all documents related to
#   the source code ("Material") are owned by Intel Corporation or its suppliers
#   or licensors.  Title to the  Material remains with  Intel Corporation or its
#   suppliers and licensors. The Material contains trade secrets and proprietary
#   and  confidential  information of  Intel or its suppliers and licensors. The
#   Material  is  protected  by  worldwide  copyright  and trade secret laws and
#   treaty  provisions. No part of the Material may be used, copied, reproduced,
#   modified, published, uploaded, posted, transmitted, distributed or disclosed
#   in any way without Intel's prior express written permission.
#   No license  under any  patent, copyright, trade secret or other intellectual
#   property right is granted to or conferred upon you by disclosure or delivery
#   of the Materials,  either expressly, by implication, inducement, estoppel or
#   otherwise.  Any  license  under  such  intellectual property  rights must be
#   express and approved by Intel in writing.
#
################################################################################

set(LINUX_LIB_SRCS
    src/Linux/SystemDevice.cpp
    src/Linux/DebugFsEntryHandler.cpp
    src/Linux/SystemDriverFactory.cpp
    src/Linux/Logger.cpp
    src/Linux/Perf.cpp
    src/Linux/Prober.cpp
    src/Linux/ModuleHandler.cpp
    src/Linux/TinyCompressDevice.cpp)

if (MIXER_CONTROL_LIB_TO_USE MATCHES "Tinyalsa")
    SET(LINUX_LIB_SRCS ${LINUX_LIB_SRCS}
        src/Linux/TinyalsaControlDevice.cpp
        src/Linux/TinyalsaControlDeviceFactory.cpp)
elseif (MIXER_CONTROL_LIB_TO_USE MATCHES "Alsa-lib")
    SET(LINUX_LIB_SRCS ${LINUX_LIB_SRCS}
        src/Linux/AlsaControlDevice.cpp
        src/Linux/AlsaControlDeviceFactory.cpp)
elseif (MIXER_CONTROL_LIB_TO_USE MATCHES "Stub")
    SET(LINUX_LIB_SRCS ${LINUX_LIB_SRCS} src/Linux/StubbedControlDeviceFactory.cpp)
endif ()

set(LIB_SRCS ${LIB_SRCS} ${LINUX_LIB_SRCS})

source_group("Source Files\\Linux" FILES ${LINUX_LIB_SRCS})

set(LINUX_LIB_INCS
    include/cAVS/Linux/SystemDevice.hpp
    include/cAVS/Linux/FileEntryHandler.hpp
    include/cAVS/Linux/DebugFsEntryHandler.hpp
    include/cAVS/Linux/Device.hpp
    include/cAVS/Linux/Driver.hpp
    include/cAVS/Linux/Logger.hpp
    include/cAVS/Linux/Perf.hpp
    include/cAVS/Linux/Prober.hpp
    include/cAVS/Linux/Probe/ExtractionInputStream.hpp
    include/cAVS/Linux/Probe/InjectionOutputStream.hpp
    include/cAVS/Linux/DriverTypes.hpp
    include/cAVS/Linux/ModuleHandler.hpp
    include/cAVS/Linux/AudioProcfsHelper.hpp
    include/cAVS/Linux/CompressTypes.hpp
    include/cAVS/Linux/CompressDevice.hpp
    include/cAVS/Linux/TinyCompressDevice.hpp
    include/cAVS/Linux/CompressDeviceFactory.hpp
    include/cAVS/Linux/TinyCompressDeviceFactory.hpp
    include/cAVS/Linux/ControlDevice.hpp
    include/cAVS/Linux/ControlDeviceTypes.hpp
    include/cAVS/Linux/ControlDeviceFactory.hpp)

if (MIXER_CONTROL_LIB_TO_USE MATCHES "Tinyalsa")
    SET(LINUX_LIB_INCS ${LINUX_LIB_INCS} include/cAVS/Linux/TinyalsaControlDevice.hpp)
elseif (MIXER_CONTROL_LIB_TO_USE MATCHES "Alsa-lib")
    SET(LINUX_LIB_INCS ${LINUX_LIB_INCS} include/cAVS/Linux/AlsaControlDevice.hpp)
elseif (MIXER_CONTROL_LIB_TO_USE MATCHES "Stub")
    SET(LINUX_LIB_INCS ${LINUX_LIB_INCS} include/cAVS/Linux/StubbedControlDevice.hpp)
endif ()

set(LIB_INCS ${LIB_INCS} ${LINUX_LIB_INCS})

source_group("Header Files\\Linux" FILES ${LINUX_LIB_INCS})
